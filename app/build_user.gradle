apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'idea'
apply from: './build-pipeline.gradle'


//load properties from the properties file, which is not in source control - CANADA
final String propFilename = "dpc-android-signing.properties"
File releaseSigningInfo = rootProject.file(propFilename)
if(!releaseSigningInfo.exists()) {
    println "You need a copy of "+propFilename
}
Properties props = new Properties()
props.load(new FileInputStream(releaseSigningInfo))

// CANADA - add ajoberstar
buildscript {
    dependencies {
        classpath 'commons-lang:commons-lang:2.6'
        classpath 'org.ajoberstar:gradle-git:1.5.0'
    }
}

// CANADA
apply plugin: 'org.ajoberstar.grgit'

println "Project Version Name: ${projectVersionName}"

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

android {
    buildFeatures {
        dataBinding = true
    }
    // Enforces Gradle to only compile the version number stated in dependencies,
    // no matter which version number the dependencies have stated, avoids dependency conflicts
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
    compileSdkVersion projectCompileSdkVersion
    buildToolsVersion "${projectBuildToolsVersion}"
    defaultConfig {
        versionCode projectVersionCode
        applicationId "ca.dominospizza"
        versionName "${projectVersionName}"
        minSdkVersion projectMinSdkVersion
        targetSdkVersion projectTargetSdkVersion
        buildConfigField "boolean", "IS_PEN_TEST_BUILD", "${checkIsPenTestBuild()}"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    sourceSets {
        main {
            // CANADA
            manifest.srcFile 'src/main/AndroidManifestCa.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/resources']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }

        androidTest.setRoot('src/androidTest')
    }

    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/spring.tooling'
        exclude 'META-INF/spring.handlers'
        exclude 'META-INF/spring.factories'
        exclude 'META-INF/spring.schemas'
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
        exclude 'LICENSE.txt'
        exclude 'git.properties'
    }
    lintOptions {
        abortOnError false
        ignoreWarnings true
    }
    productFlavors {
    }

    // CANADA
    signingConfigs {
        release {
            storeFile file("dominos_android_prod_key.keystore")
            storePassword props.STORE_PASSWORD
            keyAlias props.KEY_ALIAS
            keyPassword props.KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            minifyEnabled false

            signingConfig = createDebugSigningConfig(signingConfig)

            applicationIdSuffix ".dev"
            testCoverageEnabled false // isJen kinsMachine() // test coverage enabled only on jenkins machine - android instrumentation is not running
            buildConfigField "String", "VERSION_BUILD_NUMBER", "\"${projectVersionBuildNumber}\""
            // CANADA
            resValue "bool", "is_dev_build", "true"
            manifestPlaceholders = [    applink: "dpcanada.test-app.link",
                                        alternateAppLink: "dpcanada-alternate.test-app.link"]
        }
        // CANADA needs new QA variant for testing/distribution with app center
        // It uses same settings as debug except needs to be signed with release to distribute
        qa {
            minifyEnabled false

            signingConfig signingConfigs.release


            applicationIdSuffix ".qa"
            testCoverageEnabled false // isJenkinsMachine() // test coverage enabled only on jenkins machine - android instrumentation is not running
            buildConfigField "String", "VERSION_BUILD_NUMBER", "\"${projectVersionBuildNumber}\""
            debuggable = true
            // CANADA
            resValue "bool", "is_dev_build", "true"
            manifestPlaceholders = [    applink: "dpcanada.test-app.link",
                                        alternateAppLink: "dpcanada-alternate.test-app.link"]
        }
        release {
            minifyEnabled true
            resValue "bool", "is_dev_build", "false"
            manifestPlaceholders = [    applink: "dpcanada.app.link",
                                        alternateAppLink: "dpcanada-alternate.app.link"]

            proguardFile 'proguard-google-play-services.pro'
            proguardFile 'proguard-gson.pro'
            proguardFile 'proguard-guava.pro'
            proguardFile 'proguard-square-otto.pro'
            proguardFile 'proguard-square-picasso.pro'
            proguardFile 'proguard-springrest.pro'
            proguardFile 'proguard-tealium.pro'
            proguardFile 'proguard-json-api.pro'
            proguardFile 'proguard-rules.pro'
            proguardFile 'proguard-launchdarkly.pro'
            proguardFile 'proguard-retrofit2.pro'

            signingConfig signingConfigs.release // CANADA

            // signingConfig = createSigningConfig(signingConfig)

            buildConfigField "String", "VERSION_BUILD_NUMBER", "\"${projectVersionBuildNumber}\""
        }
    }
    fixVariantNames("app", applicationVariants)
    applicationVariants.all { variant ->
        //apk CANADA
        def apk = variant.outputs[0].outputFile;
        def newName = apk.name.replace(".apk", String.format("-ca-%s.apk", defaultConfig.versionName));
        variant.outputs[0].outputFileName = new File(newName);
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
}

afterEvaluate {
    assembleDebug.doLast {
        copy {
            from "$rootDir/DominosApp/build/outputs/apk/debug/"
            into "$rootDir/target/"
        }
        // to avoid having output-metadata.json since it causes failure in consecutive release builds (while uploading to release artifacts directory).
        delete "$rootDir/target/output-metadata.json"
    }
    assembleRelease.doLast {
        copy {
            from "$rootDir/DominosApp/build/outputs/apk/release/"
            into "$rootDir/target/"
        }
        delete "$rootDir/target/output-metadata.json"
    }
}

dependencies {

    repositories {
        maven { url "https://appboy.github.io/appboy-android-sdk/sdk" } // CANADA still needed?
    }
    //Project modules
    // CANADA - need to tweak wear to support appcenter distribution
    // wearApp project(':DominosWear')
    implementation project(':play-services-recaptcha-16.0.1-offplay-eap')

    //Android
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'androidx.vectordrawable:vectordrawable-animated:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.3.0-rc01' // 1.1.0 is crashing in 5.1.1 os version and this alpha is safe...
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.fragment:fragment-ktx:1.3.3'
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation 'androidx.browser:browser:1.3.0' // Chrome Tab matching (enables 100% guaranteed matching based on cookies) - Branch
    implementation 'com.google.android.instantapps:instantapps:1.1.0' // Needed for latest Kount version

    // Google Analytics for CANADA
    implementation 'com.google.android.gms:play-services-analytics:16.0.8'
    implementation 'com.google.code.gson:gson:2.7'
    implementation 'com.google.android.gms:play-services-tagmanager:16.0.8'

    // CANADA appcenter
    def appCenterSdkVersion = '3.0.0'
    implementation "com.microsoft.appcenter:appcenter-distribute:${appCenterSdkVersion}"

    // FOR CANADA Carside Delivery PROCESSING
    implementation 'io.jsonwebtoken:jjwt:0.9.0'

    // Retrofit - ADDED FOR CANADA since we don't get it for free from order-client
    def retrofit_version = '2.6.1'
    def jackson_version = '2.9.6'

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-jackson:$retrofit_version"
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.7.0'

    // Jackson - ADDED FOR CANADA since we don't get it for free from order-client
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"


    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation("androidx.work:work-runtime-ktx:2.5.0") {
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }

    implementation 'androidx.core:core-ktx:1.6.0'

    // Kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-jackson:2.9.0"
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    def okHttpVersion = "4.9.1"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"

    // Jackson
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.12.4"

    /**
     * EXTENSIONS
     */

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'

    // https://docs.branch.io/apps/android/
    implementation ('io.branch.sdk.android:library:5.0.15') {
        exclude module: 'answers-shim'
    }

    /**
     * ANALYTICS
     */
    //Tealium - https://github.com/Tealium/tealium-android
    /* CANADA
    implementation 'com.tealium:tealium:5.9.1@aar'
     */
    implementation(name: 'tealiumstubs-release', ext: 'aar')

    // Adobe - https://github.com/Adobe-Marketing-Cloud/mobile-services/releases & https://mvnrepository.com/artifact/com.adobe.mobile/adobeMobileLibrary
    implementation 'com.adobe.mobile:adobeMobileLibrary:4.18.2'

    // CANADA
    implementation files('libs/jsonapi-converter-0.9.jar')

    // Appboy - https://github.com/Appboy/appboy-android-sdk/releases & https://appboy.github.io/appboy-android-sdk/sdk/com/appboy/
    // CANADA Braze version 19
    implementation 'com.appboy:android-sdk-base:19.0.0@aar'
    implementation 'com.appboy:android-sdk-ui:19.0.0@aar'

    //Facebook
    implementation 'com.facebook.android:facebook-core:9.0.0'

    //Google
    implementation 'com.google.guava:guava:30.1-android'

    //Google Play
    implementation "com.google.android.gms:play-services-safetynet:17.0.1"
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    implementation 'com.google.android.gms:play-services-wearable:17.1.0'
    implementation 'com.google.android.gms:play-services-ads-identifier:17.1.0' // required for Branch to collect google advertising id.

    // for reCaptcha v3
    implementation 'com.google.android.gms:play-services-base:17.6.0'
    implementation 'com.google.android.gms:play-services-basement:17.6.0'
    implementation 'com.google.android.gms:play-services-tasks:17.2.1'
    // implementation 'com.google.android.gms:play-services-recaptcha:16.0.0'

    // firebase
    implementation platform('com.google.firebase:firebase-bom:29.0.0')
    implementation "com.google.firebase:firebase-appindexing" // required for Branch
    implementation "com.google.firebase:firebase-messaging"
    implementation 'com.google.firebase:firebase-perf'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'

    //Apache Commons
    implementation 'commons-lang:commons-lang:2.6'

    //Domino's SDK
    /* CANADA
    implementation ("com.dominos.ecommerce.order:order-client:${rootProject.ext.sdkVersion}") {
        exclude group: 'org.apache.directory.studio', module: 'org.apache.commons.io'
    }
    */

    // CANADA
    implementation files('libs/menu-annotations-5.35.0.jar')
    implementation files("libs/order-client-${rootProject.ext.sdkVersion}.jar")
    // CANADA pull in library depended upon by order-client that has been hand copied to this project
    implementation files('libs/market-configuration-1.85.0.jar')
    implementation 'org.springframework.android:spring-android-rest-template:1.0.1.RELEASE'
    // CANADA slf4j is used by order-client in release builds so always include, not just on debug builds
    implementation 'org.slf4j:slf4j-android:1.7.25' // for sdk logs
    // CANADA 1.1.2 is not on mavenCenter
    implementation files('libs/button-merchant-1-1-2.aar')
    // CANADA COPYANDPAY
    implementation files('libs/oppwa.mobile-3.18.0-release.aar')

    // CANADA implementation "org.springframework.android:spring-android-rest-template:1.0.1.RELEASE"

    debugImplementation 'org.slf4j:slf4j-android:1.7.30' // for sdk logs

    //Otto
    implementation 'com.squareup:otto:1.3.8'

    // PayPal - https://github.com/braintree/braintree_android
    implementation 'com.braintreepayments.api:paypal:4.7.0'
    implementation 'com.braintreepayments.api:data-collector:4.7.0'

    // Kount - CANADA - might need to update kount lib to later version
    // Kount - https://github.com/Kount/kount-android-sdk
//    implementation 'com.kount:kount:4.1.3@jar' // Kount is part of PayPal and i couldn't exclude it from it

    //ibotta - https://github.com/button/button-merchant-android
// CANADA not on mavenCenter   implementation 'com.usebutton.merchant:button-merchant:1.1.2' // Do not update -> trackorder disabled after this version

    implementation 'com.android.installreferrer:installreferrer:2.2'

    // LaunchDarkly - https://github.com/launchdarkly/android-client-sdk
    implementation 'com.launchdarkly:launchdarkly-android-client-sdk:3.1.1'


    // https://salesforce-marketingcloud.github.io/MarketingCloudSDK-Android/sdk-implementation/implement-sdk-google.html
    // https://salesforce-marketingcloud.github.io/MarketingCloudSDK-Android/repository/com/salesforce/marketingcloud/marketingcloudsdk/
    // CANADA - not supporting salesforce implementation 'com.salesforce.marketingcloud:marketingcloudsdk:7.3.1'

    // Lottie - https://github.com/airbnb/lottie-android
    implementation 'com.airbnb.android:lottie:4.0.0'

    /**
     * TESTS
     */
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'androidx.test:core:1.3.0'
    testImplementation 'org.robolectric:robolectric:4.5.1'

    testImplementation group: 'commons-logging', name: 'commons-logging', version: '1.2'
    testImplementation 'org.assertj:assertj-core:3.19.0'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
    testImplementation 'org.powermock:powermock-module-junit4-rule-agent:2.0.9'
    testImplementation 'org.powermock:powermock-module-junit4-rule:2.0.9'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3'
    testImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"
    testImplementation "com.squareup.okhttp3:okhttp:$okHttpVersion"

    androidTestImplementation group: 'commons-logging', name: 'commons-logging', version: '1.2'
    androidTestImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'org.mockito:mockito-core:3.8.0'

    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestImplementation "androidx.annotation:annotation:1.0.1" // don't upgrade this - there is some issue with the latest version
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    // Optional -- UI testing with Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    androidTestImplementation("org.springframework:spring-test:5.3.4") {
        exclude module: "spring-core"
    }

    // Dependency to build and run UI Automator tests
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
}
